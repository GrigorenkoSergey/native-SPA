(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&a(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const y=`<nav>
  <ul>
    <li><a href="page-1">Page-1</a></li>
    <li><a href="page-2">Page-2</a></li>
    <li><a href="https://mdn.github.io/css-examples/">Outer link</a></li>
  </ul>
</nav>`;class g extends HTMLElement{connectedCallback(){this.innerHTML=y}}customElements.define("app-nav",g);const L=10,E=({relativePathToPagesDir:l="../pages",pageContentContainer:i="main",pageCssContainerID:s="page-css",defaultPage:a="/page-1",page404:e="/page-404"})=>{const t=async(n,r=0)=>{if(r>L)return;const{pathname:d,search:u}=new URL(n);if(d==="/")return window.location.href=a;const p=l+d+u,f=async()=>{const o=await(await fetch(p+"/template.html",{cache:"force-cache"})).text(),w=document.querySelector(i);w.innerHTML=o},h=async()=>{const c=document.getElementById(s);c&&c.remove();const o=document.createElement("link");o.id=s,o.rel="stylesheet",o.href=p+"/style.css",document.head.appendChild(o)},m=async()=>{const o=(await import(p+"/index.js")).default;await(o==null?void 0:o())};try{await f(),await h(),await m()}catch{t(window.location.origin+e,r+1)}};document.addEventListener("DOMContentLoaded",()=>t(window.location.href)),window.history.pushState=new Proxy(window.history.pushState,{async apply(...n){const r=n[2][2];return t(r),Reflect.apply(...n)}}),window.addEventListener("popstate",n=>{t(n.target.location.href)}),document.addEventListener("click",async n=>{const r=n.target.closest("a");if(!r||new URL(r.href).origin!==window.location.origin)return;n.preventDefault();const u=new URL(r.href,window.location.href);window.history.pushState(null,"",u.href)})};E({});
